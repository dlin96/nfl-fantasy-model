const searchPlayerName = (value, callback) => {
//     axios.post("http://localhost:8000/playercomp/search", {
//       params: {
//         playername: value
//       }
//     })
//       .then( response => {
//         console.log("response: \n");
//         console.log(response);
//         callback(response);
//       })
//       .catch( (error) => {
//         console.log(error);
//       });
// }

// // Teach Autosuggest how to calculate suggestions for any given input value.
// const getSuggestions = (value, callback) => {
//     const inputValue = value.trim().toLowerCase();
//     const inputLength = inputValue.length;
//     console.log("inputLength: " + inputLength);
  
//     if (inputLength === 0) return [];
//     searchPlayerName(inputValue, response => {
//         callback(response);
//     });
//   };
  
//   // When suggestion is clicked, Autosuggest needs to populate the input
//   // based on the clicked suggestion. Teach Autosuggest how to calculate the
//   // input value for every given suggestion.
//   const getSuggestionValue = suggestion => suggestion.name;
  
//   // Use your imagination to render suggestions.
//   const renderSuggestion = suggestion => (
//     <div>
//       {suggestion.name}
//     </div>
//   );
  
//   export default class PlayerComp extends React.Component {
//     constructor() {
//       super();
  
//       // Autosuggest is a controlled component.
//       // This means that you need to provide an input value
//       // and an onChange handler that updates this value (see below).
//       // Suggestions also need to be provided to the Autosuggest,
//       // and they are initially empty because the Autosuggest is closed.
//       this.state = {
//         value: '',
//         suggestions: []
//       };
//     }
  
//     onChange = (event, { newValue }) => {
//       this.setState({
//         value: newValue
//       });
//     };
  
//     // Autosuggest will call this function every time you need to update suggestions.
//     // You already implemented this logic above, so just use it.
//     onSuggestionsFetchRequested = ({ value }) => {
//       console.log("getSuggestions called");
//       console.log(value);
//       let val;
//       getSuggestions(value, response => {
//           val = response;
//           console.log("val: \n");
//           console.log(val);
//           this.setState({
//             suggestions: getSuggestions(value)
//           });
//       });
//     };
  
//     // Autosuggest will call this function every time you need to clear suggestions.
//     onSuggestionsClearRequested = () => {
//       this.setState({
//         suggestions: []
//       });
//     };
  
//     render() {
//       const { value, suggestions } = this.state;
//       console.log("suggestions: " + suggestions);
  
//       // Autosuggest will pass through all these props to the input.
//       const inputProps = {
//         placeholder: 'Type a programming language',
//         value,
//         onChange: this.onChange
//       };
  
//       // Finally, render it!
//       return (
//         <Autosuggest
//           suggestions={suggestions}
//           onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}
//           onSuggestionsClearRequested={this.onSuggestionsClearRequested}
//           getSuggestionValue={getSuggestionValue}
//           renderSuggestion={renderSuggestion}
//           inputProps={inputProps}
//         />
//       );
//     }
//   }